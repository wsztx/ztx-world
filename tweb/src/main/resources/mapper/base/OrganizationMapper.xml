<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ztx.world.base.mapper.OrganizationMapper" >

    <resultMap id="BaseResultMap" type="com.ztx.world.base.entity.Organization" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
        <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
        <result column="org_name" property="orgName" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="org_path" property="orgPath" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, status, create_time, update_time, create_user_id, org_code, org_name, description, 
        org_path
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ztx.world.base.entity.OrganizationExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from base_organization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from base_organization
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from base_organization
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.ztx.world.base.entity.OrganizationExample" >
        delete from base_organization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.ztx.world.base.entity.Organization" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into base_organization (id, status, create_time, 
            update_time, create_user_id, org_code, 
            org_name, description, org_path
            )
        values (#{id,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{orgCode,jdbcType=VARCHAR}, 
            #{orgName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{orgPath,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.ztx.world.base.entity.Organization" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into base_organization
        <trim prefix="(" suffix=")" suffixOverrides="," >
            id,
            <if test="status != null" >
                status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="createUserId != null" >
                create_user_id,
            </if>
            <if test="orgCode != null" >
                org_code,
            </if>
            <if test="orgName != null" >
                org_name,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="orgPath != null" >
                org_path,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            #{id,jdbcType=BIGINT},
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null" >
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="orgCode != null" >
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null" >
                #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="orgPath != null" >
                #{orgPath,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.ztx.world.base.entity.OrganizationExample" resultType="java.lang.Integer" >
        select count(*) from base_organization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update base_organization
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUserId != null" >
                create_user_id = #{record.createUserId,jdbcType=BIGINT},
            </if>
            <if test="record.orgCode != null" >
                org_code = #{record.orgCode,jdbcType=VARCHAR},
            </if>
            <if test="record.orgName != null" >
                org_name = #{record.orgName,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.orgPath != null" >
                org_path = #{record.orgPath,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update base_organization
        set id = #{record.id,jdbcType=BIGINT},
            status = #{record.status,jdbcType=INTEGER},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            create_user_id = #{record.createUserId,jdbcType=BIGINT},
            org_code = #{record.orgCode,jdbcType=VARCHAR},
            org_name = #{record.orgName,jdbcType=VARCHAR},
            description = #{record.description,jdbcType=VARCHAR},
            org_path = #{record.orgPath,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.ztx.world.base.entity.Organization" >
        update base_organization
        <set >
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null" >
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="orgCode != null" >
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null" >
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="orgPath != null" >
                org_path = #{orgPath,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ztx.world.base.entity.Organization" >
        update base_organization
        set status = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user_id = #{createUserId,jdbcType=BIGINT},
            org_code = #{orgCode,jdbcType=VARCHAR},
            org_name = #{orgName,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            org_path = #{orgPath,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>